#! /usr/bin/perl
#
# Copyright 2003 by Stefan Hornburg (Racke) <racke@linuxia.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA.

use strict;
use warnings;

use IO::File;
use IO::ScalarArray;

use DataFilter::Filter::CSV;

unless (@ARGV) {
	die "$0: no input file specified\n";
}

my $inputfile = shift;
my $inputhandle = new IO::File;
my $output = [];

unless ($inputhandle->open($inputfile)) {
	die "$0: couldn't open input file $inputfile: $!\n";
}

my $filter = new DataFilter::Filter::CSV;

$filter->param('INPUT_COLUMNS', ['partnumber', undef, undef, 'manufacturer', 'count']);
$filter->filter($inputhandle, $output);

use XML::Generator;
my $xml = new XML::Generator (pretty => 1, escape => 1);
my (@columns, @rows);
my $col;

for (my $i = 1; $i < @$output; $i++) {
	@columns = @{$output->[0]};
	push (@rows,
		  $xml->component(map {$col = shift(@columns); $xml->$col($_)} @{$output->[$i]}));
}
print $xml->componentlist(@rows);

